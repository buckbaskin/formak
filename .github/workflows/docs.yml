name: Check for documentation
run-name: docs-update
on: [push]
jobs:
  docs-design-diff:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Check for changes to docs. Relies on empty being falsey
        run: git diff --name-only ${{ steps.extract_branch.outputs.branch }} $(git merge-base ${{ steps.extract_branch.outputs.branch }} origin/main) | grep "^docs/designs/"
      - run: echo "üçè This job's status is ${{ job.status }}."
  docs-diff:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Check for changes to docs. Relies on empty being falsey
        run: git diff --name-only ${{ steps.extract_branch.outputs.branch }} $(git merge-base ${{ steps.extract_branch.outputs.branch }} origin/main) | grep "^docs" | grep -v "^docs/designs/" | grep -v "^docs/generated/"
      - run: echo "üçè This job's status is ${{ job.status }}."
      - run: pip install -r requirements_dev.txt
      - run: cd docs/ ; make html
      - run: LS_RESULT=$(git ls-files --others --exclude-standard -- docs/generated/**/*.html) ; echo Missing Files $LS_RESULT ; test -z "$LS_RESULT"
      - run: DIFF_RESULT=$(git diff --name-only -- docs/generated/**/*.html) ; echo Changed Files $DIFF_RESULT ; test -z "$DIFF_RESULT"
      - run: echo "This job's status is ${{ job.status }}."
